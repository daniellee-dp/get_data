#!/bin/bash

local_test="ns"
## egrep regex string of owned IP space
local_ips="45.79.70.221,173.230.151.57,69.164.195.113,173.255.194.200,45.79.53.225,173.255.194.216,50.116.19.139,173.255.205.123,45.33.14.206,173.255.206.97,45.33.37.4,173.255.220.86,139.162.255.237,178.79.148.154,176.58.118.63,178.79.150.133,88.80.184.225,178.79.155.182,212.71.250.153,139.162.241.179,178.79.158.65,176.58.98.171,178.79.172.233,173.230.140.62,192.155.93.146,172.104.152.206,192.168.134.75,139.162.36.181,192.168.136.218,172.104.250.168,192.168.137.165,172.104.226.223,192.168.157.109,172.105.71.238,192.168.163.234,172.104.166.89,192.168.166.44,45.79.39.214,192.168.184.206,104.200.17.193,192.168.188.244,45.79.210.181,192.168.193.184,50.116.6.180,192.168.197.11,139.177.205.232,192.168.197.221,45.56.119.173,192.168.202.152,45.56.91.82,192.168.208.207,198.58.101.24,192.168.214.66,45.79.253.206,192.168.232.31,139.177.205.119,192.168.232.44,45.79.120.87,192.46.208.121,72.14.178.188,192.46.216.223,172.105.104.155,192.46.222.46,192.46.236.134,192.46.236.195,72.14.185.5,192.53.167.189,139.162.183.43,194.233.163.109,143.42.23.69,194.233.164.38,172.104.145.94,194.233.167.223,192.46.217.151,198.58.100.192,45.56.70.65,198.58.112.178,96.126.114.99,198.58.97.96,109.74.200.63,212.111.43.59,178.79.165.119,212.71.253.199,212.71.250.43,213.168.249.163,45.33.32.158,45.33.33.218,23.92.20.162,45.33.90.237,45.56.105.219,45.56.106.220,96.126.111.109,192.155.88.226,198.74.60.157,45.33.77.226,45.33.95.147,45.79.171.127,45.79.176.165,45.79.185.114,172.104.12.24,45.33.0.81,45.56.121.92,45.33.67.35,45.79.154.89,45.79.143.65,45.79.185.227,45.33.74.238,45.79.191.135,45.79.192.123,45.79.215.192,139.177.200.91,45.33.22.87,45.79.23.84,45.79.17.125,45.79.27.7,45.33.26.48,45.79.8.131,50.116.21.90,72.14.178.225,173.255.193.120,45.79.137.125,66.175.212.172,45.79.92.72,66.175.219.92,45.56.65.244,66.228.51.45,45.56.127.85,69.164.204.243,45.33.116.214,72.14.183.62,45.79.38.252,96.126.112.196"
## name server domains owned by brand, considered local
## for ns1/ns2.domain.com, enter "domain.com"
## e.g local_ns="domain.com|whitelabelbrand.com|somens.com"
local_ns="fcomet.com|myfcloud.com|myfcloudin.com|myfcloudto.com|myfcloudau.com|myfcloudtx.com|myfcloudfr.com|myfcloudat.com|myfcloudnw.com|myfclouduk.com|myfcloudsg.com|myfcloudde.com|myfcloudjp.com|myfcloudch.com|myfcloudla.com|myfcloudmi.com|myfcloudwa.com|myfclouddc.com|myfcloudoc.com|myfcloudtn.com|myfcloudid.com|myfcloudse.com|myfcloudnl.com|myfcloudit.com|myfcloudps.com|myfcloudbr.com|mysafedns.com"
if [ "$1" ]; then
        local_ns="$1"
fi

## probably don't need to edit below this point
timeout=1
tries=1
resolvers="74.82.42.42 209.244.0.4 4.2.2.2 8.8.8.8 8.8.4.4 209.244.0.3 209.244.0.4"
host=`hostname`
tmpf="/tmp/.wk$$"

for i in `egrep -H OWNER= /var/cpanel/users/* | tr '/:=' ' ' | awk '{print$4":"$6}'`; do
        user=`echo $i | cut -d':' -f1`
        owner=`echo $i | cut -d':' -f2`
        if [ -f "/var/cpanel/users/$user" ] && [ -d "/var/cpanel/userdata/$user" ]; then
                suspended=`egrep SUSPENDED=1 /var/cpanel/users/$user`
                if [ -z "$suspended" ]; then
                        status=1
                else
                        status=0
                fi
                assigned_ip=`egrep IP= /var/cpanel/users/$user | cut -d'=' -f2`
                plan=`egrep PLAN= /var/cpanel/users/$user | cut -d'=' -f2`
                contact=`egrep CONTACTEMAIL= /var/cpanel/users/$user | cut -d'=' -f2`
                if [ -z "$contact" ]; then
                        contact=unset
                fi
                # main domain
                domain=`egrep main_domain /var/cpanel/userdata/$user/main | awk '{print$2}'`
                echo "$host,$owner,$user,$contact,$status,parent,$domain,$domain,$assigned_ip"
                # addons
                for addon in `cat /var/cpanel/userdata/$user/main | egrep -v cp_php_magic_include_path.conf | awk '/addon_domains/{f=1;next}/main_domain/{f=0}f' | awk '{print$1}' | tr -d ':'`; do
                        echo "$host,$owner,$user,$contact,$status,addon,$domain,$addon,$assigned_ip"
                done
                unset suspended unset status
        fi
done > $tmpf.userstubs

for i in `cat $tmpf.userstubs`; do
        host=`echo $i | cut -d',' -f1`
        owner=`echo $i | cut -d',' -f2`
        user=`echo $i | cut -d',' -f3`
        contact=`echo $i | cut -d',' -f4`
        status=`echo $i | cut -d',' -f5`
        type=`echo $i | cut -d',' -f6`
        pdomain=`echo $i | cut -d',' -f7`
        domain=`echo $i | cut -d',' -f8`
        assigned_ip=`echo $i | cut -d',' -f9`
        prefix="$i"
        if [ "$domain" ]; then
                resolv=`echo "$resolvers" | tr ' ' '\n' | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
                domain_ip=`dig +time=$timeout +tries=$tries +short $domain @$resolv | head -n1`
                errcheck=`echo $domain_ip | egrep 'connection timed out'`
                if [ "$errcheck" ]; then
                        resolv=`echo "$resolvers" | tr ' ' '\n' | grep -v "$resolv" | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
                        domain_ip=`dig +time=$timeout +tries=$tries +short $domain @$resolv | head -n1`
                        unset errcheck
                        errcheck=`echo $domain_ip | egrep 'connection timed out'`
                fi
                if [ -z "$domain_ip" ] || [ "$errcheck" ]; then
                        domain_ip="nxdom"
                fi
                if [ "$domain_ip" == "$assigned_ip" ]; then
                        hosted="lhost"
                else
                        hosted="rhost"
                fi
                if [ "$domain_ip" == "nxdom" ]; then
                        ns="nxdom"
                        ns_ip="nxdom"
                        ns_iplr="nxdom"
                        hosted="zombie"
                else
                        resolv=`echo "$resolvers" | tr ' ' '\n' | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
                        ns=`dig +time=$timeout +tries=$tries $domain @$resolv NS | egrep '.*IN.*NS.*' | awk '{print$5}' | egrep -v '^$' | sed 's/.$//' | head -n1`
                        errcheck=`echo $ns | egrep 'connection timed out'`
                        if [ "$errcheck" ]; then
                                resolv=`echo "$resolvers" | tr ' ' '\n' | grep -v "$resolv" | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
                                ns=`dig +time=$timeout +tries=$tries $domain @$resolv NS | egrep '.*IN.*NS.*' | awk '{print$5}' | egrep -v '^$' | sed 's/.$//' | head -n1`
                                unset errcheck
                                errcheck=`echo $ns | egrep 'connection timed out'`
                        fi
                        if [ -z "$errcheck" ]; then
                                ns_ip=`dig +time=$timeout +tries=$tries +short $ns @$resolv | head -n1`
                                errcheck=`echo $ns_ip | egrep 'connection timed out'`
                                if [ "$errcheck" ]; then
                                        resolv=`echo "$resolvers" | tr ' ' '\n' | grep -v "$resolv" | awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}' | head -n1 | awk '{print$2}'`
                                        ns_ip=`dig +time=$timeout +tries=$tries +short $ns @$resolv | head -n1`
                                        unset errcheck
                                        errcheck=`echo $ns_ip | egrep 'connection timed out'`
                                fi
                        else
                                ns="nxdom"
                                ns_ip="nxdom"
                        fi
                        if [ "$ns_ip" == "nxdom" ] || [ "$ns" == "nxdom" ] || [ "$domain_ip" ==  "nxdom" ]; then
                                ns_iplr=nxdom
                        else
                                if [ "$local_test" == "ns" ]; then
                                        ns_iplr=`echo $ns | egrep "$local_ns"`
                                        if [ "$ns_iplr" ]; then
                                                ns_iplr=local
                                        else
                                                ns_iplr=remote
                                        fi
                                else
                                        ns_iplr=`echo $ns_ip | egrep "$local_ips"`
                                        if [ "$ns_iplr" ]; then
                                                ns_iplr=local
                                        else
                                                ns_iplr=remote
                                        fi
                                fi
                        fi
                fi
                echo "$prefix,$domain_ip,$hosted,$ns,$ns_ip,$ns_iplr"
        fi
done

rm -f $tmpf.*
